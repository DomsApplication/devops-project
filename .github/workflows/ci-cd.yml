name: Deploy changes

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run the workflow against'
        type: environment
        required: true

permissions:
  contents: write

jobs:
  deploy:
    name: Build and Deployment
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'default' }}
    permissions:
      id-token: write
      contents: write
      pull-requests: write
      packages: read
      
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - name: Debug Information
        run: |
          echo environment: ${{ github.event.inputs.environment || 'default' }}
          echo github actor: ${{ github.actor }}
          echo github actor id: ${{ github.actor_id }}
          echo branch or tag: ${{ github.ref_type }}
          echo branch or tag name: ${{ github.ref_name }}
          echo git_hash: $(git rev-parse --short "$GITHUB_SHA")
          echo git_branch: ${GITHUB_REF#refs/heads/}
          echo github.event.pull_request.merged: ${{ github.event.pull_request.merged }}
          echo HOST: ${{ secrets.HOST1 }}
          echo PASSWORD: ${{ secrets.PASSWORD1 }}

      - name: Ensure target directory exists on remote server
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.HOST1 }}
          username: root
          password: ${{ secrets.PASSWORD1 }}
          script: |
            mkdir -p /home/${{ github.ref_name }}

      # This will copies the frontend code base to the remote server
      - name: CI - Move frontend source to remote server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST1 }}
          username: root
          password: ${{ secrets.PASSWORD1 }}
          timeout: 600s
          overwrite: true
          source: ./client/
          target: /home/${{ github.ref_name }}

      # This will copies the backend code base to the remote server
      - name: CI - Move backend source to remote server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST1 }}
          username: root
          password: ${{ secrets.PASSWORD1 }}
          timeout: 600s
          overwrite: true
          source: ./server/
          target: /home/${{ github.ref_name }}

      # This is for running the commands on the remote server
      - name: CD - Start React and Express on Remote Server
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.HOST1 }}
          username: root
          password: ${{ secrets.PASSWORD1 }}
          script: |
            echo "****************** Updating & Installing Dependencies *****************"
            cd /home/${{ github.ref_name }}/server
            npm install
            
            cd /home/${{ github.ref_name }}/client
            npm install
            npm run build  # Build React frontend
            
            echo "****************** Starting Applications with PM2 *****************"
            npm install -g pm2  # Ensure pm2 is installed
            
            # Start Express backend on port 5000
            cd /home/${{ github.ref_name }}/server
            PORT=4100 pm2 start npm --name "backend" -- start
            
            # Start React frontend with serve on port 3000
            cd /home/${{ github.ref_name }}/client
            pm2 serve build/ 3100 --name "frontend" --spa
            
            # Save PM2 process list to restart on reboot
            pm2 save
            pm2 startup
