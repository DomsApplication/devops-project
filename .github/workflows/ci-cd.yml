name: Deploy changes

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run the workflow against'
        type: environment
        required: true
  push:
    branches:
      - '**'

permissions:
  contents: write

jobs:
  deploy:
    name: Build and Deployment
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'std-pjt-mern-poc' }}
    permissions:
      id-token: write
      contents: write
      pull-requests: write
      packages: read

    if: github.ref_name != 'main'
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - name: Debug Information
        run: |
          echo environment: ${{ github.event.inputs.environment || 'default' }}
          echo github actor: ${{ github.actor }}
          echo github actor id: ${{ github.actor_id }}
          echo branch or tag: ${{ github.ref_type }}
          echo branch or tag name: ${{ github.ref_name }}
          echo git_hash: $(git rev-parse --short "$GITHUB_SHA")
          echo git_branch: ${GITHUB_REF#refs/heads/}
          echo github.event.pull_request.merged: ${{ github.event.pull_request.merged }}
          echo HOST: ${{ secrets.DROPLET_IP }}

      - name: Ensure target directory exists on remote server
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p /home/${{ github.ref_name }}

      # This will copies the frontend code base to the remote server
      - name: CI - Move frontend source to remote server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          timeout: 600s
          overwrite: true
          source: ./client/
          target: /home/${{ github.ref_name }}

      # This will copies the backend code base to the remote server
      - name: CI - Move backend source to remote server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          timeout: 600s
          overwrite: true
          source: ./server/
          target: /home/${{ github.ref_name }}

      # This is for running the commands on the remote server
      - name: Deploy Application
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          timeout: 900s
          script: |
            echo "****************** Checking PM2 Running Processes *****************"
          
            BACKEND_PM2_ID=$(pm2 id "server-${{ github.ref_name }}" | sed 's/\[//g' | sed 's/\]//g')
            FRONTEND_PM2_ID=$(pm2 id "client-${{ github.ref_name }}" | sed 's/\[//g' | sed 's/\]//g')
          
            if [ -z "$BACKEND_PM2_ID" ] || [ "$BACKEND_PM2_ID" == "[]" ]; then
                PROCESS_COUNT=$(pm2 list | grep -cE "(online|stopped|errored)")
                if [ -z "$PROCESS_COUNT" ] || [ "$PROCESS_COUNT" -lt 0 ]; then PROCESS_COUNT=0; fi
          
                REACT_PORT=$((3000 + PROCESS_COUNT / 2))
                EXPRESS_PORT=$((4000 + PROCESS_COUNT / 2))
            else
                EXPRESS_PORT=$(pm2 env "$BACKEND_PM2_ID" | grep "PORT" | sed 's/.*PORT: \([0-9]*\).*/\1/')
                REACT_PORT=$(pm2 env "$FRONTEND_PM2_ID" | grep "PORT" | sed 's/.*PORT: \([0-9]*\).*/\1/')
                pm2 delete "server-${{ github.ref_name }}"
                pm2 delete "client-${{ github.ref_name }}"
            fi
          
            echo "****************** Creating .env Files *****************"
          
            echo "PORT=$EXPRESS_PORT" > /home/${{ github.ref_name }}/server/.env
            echo "ALLOWED_ORIGINS=http://app.merav.co.in/${{ github.ref_name }},http://app.merav.co.in" >> /home/${{ github.ref_name }}/server/.env
          
            echo "REACT_APP_API_URL=http://app.merav.co.in/${{ github.ref_name }}/express" > /home/${{ github.ref_name }}/client/.env
          
            echo "****************** Updating & Installing Dependencies *****************"
          
            cd /home/${{ github.ref_name }}/server
            npm install
            PORT=$EXPRESS_PORT pm2 start npm --name "server-${{ github.ref_name }}" -- start
          
            cd /home/${{ github.ref_name }}/client
            export NODE_OPTIONS="--max-old-space-size=1024"
            npm cache clean --force
            npm install
            npm run build
            pm2 serve build/ $REACT_PORT --name "client-${{ github.ref_name }}" --spa
          
            pm2 save
            pm2 startup
          
            echo "****************** Updating Nginx Configuration for Student URLs *****************"
          
            sudo apt update && sudo apt install -y nginx
            NGINX_CONFIG_FILE="/etc/nginx/sites-available/students"
            STUDENT_PATH="/${{ github.ref_name }}/"
            STUDENT_REACT_PORT=$REACT_PORT
            STUDENT_EXPRESS_PORT=$EXPRESS_PORT
          
            if [ -f "$NGINX_CONFIG_FILE" ]; then
              echo "Nginx config file exists. Checking entries..."
          
              if ! grep -q "location $STUDENT_PATH" "$NGINX_CONFIG_FILE"; then
                echo "Adding React proxy for ${{ github.ref_name }}"
                sudo sed -i "/server {/a \\  
                location $STUDENT_PATH { \\
                    proxy_pass http://localhost:$STUDENT_REACT_PORT; \\
                    proxy_set_header Host \$host; \\
                    proxy_set_header X-Real-IP \$remote_addr; \\
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for; \\
                    rewrite ^$STUDENT_PATH(.*)\$ /\$1 break; \\
                }" "$NGINX_CONFIG_FILE"
              fi
          
              EXPRESS_PATH="${STUDENT_PATH}express/"
              if ! grep -q "location $EXPRESS_PATH" "$NGINX_CONFIG_FILE"; then
                echo "Adding Express API proxy for ${{ github.ref_name }}"
                sudo sed -i "/server {/a \\  
                location $EXPRESS_PATH { \\
                    proxy_pass http://localhost:$STUDENT_EXPRESS_PORT/; \\
                    proxy_http_version 1.1; \\
                    proxy_set_header Upgrade \$http_upgrade; \\
                    proxy_set_header Connection 'upgrade'; \\
                    proxy_set_header Host \$host; \\
                    proxy_cache_bypass \$http_upgrade; \\
                }" "$NGINX_CONFIG_FILE"
              fi
            else
              echo "Creating new Nginx config file for students..."
              sudo bash -c "echo 'server {
                  listen 80;
                  server_name app.merav.co.in;
          
                  location $STUDENT_PATH {
                      proxy_pass http://localhost:$STUDENT_REACT_PORT;
                      proxy_set_header Host \$host;
                      proxy_set_header X-Real-IP \$remote_addr;
                      proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                      rewrite ^$STUDENT_PATH(.*)\$ /\$1 break;
                  }
          
                  location ${STUDENT_PATH}express/ {
                      proxy_pass http://localhost:$STUDENT_EXPRESS_PORT/;
                      proxy_http_version 1.1;
                      proxy_set_header Upgrade \$http_upgrade;
                      proxy_set_header Connection 'upgrade';
                      proxy_set_header Host \$host;
                      proxy_cache_bypass \$http_upgrade;
                  }
              }' > $NGINX_CONFIG_FILE"
            fi
          
            sudo ln -sf /etc/nginx/sites-available/students /etc/nginx/sites-enabled/
            sudo nginx -t
            sudo systemctl restart nginx
            echo "âœ… Nginx Configuration Updated and Restarted Successfully"